{
  "dependencies": {
    "@assistant-ui/react": "^0.7.82",
    "@assistant-ui/react-ai-sdk": "^0.7.15",
    "@assistant-ui/react-ui": "^0.1.7",
    "@headlessui/react": "^2.2.0",
    "@heroicons/react": "^2.2.0",
    "@nestjs/axios": "^4.0.0",
    "@nestjs/bull": "^11.0.2",
    "@nestjs/config": "^4.0.2",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.0.20",
    "@nestjs/schedule": "^6.0.0",
    "@nestjs/swagger": "^11.1.4",
    "@nestjs/terminus": "^11.0.0",
    "@prisma/client": "^6.5.0",
    "@qdrant/js-client-rest": "^1.14.0",
    "@tailwindcss/typography": "^0.5.16",
    "@types/jsonwebtoken": "^9.0.8",
    "@types/papaparse": "^5.3.15",
    "@types/react-beautiful-dnd": "^13.1.8",
    "@types/react-dropzone": "^5.1.0",
    "@types/xlsx": "^0.0.36",
    "axios": "^1.7.9",
    "bcrypt": "^5.1.1",
    "bull": "^4.16.5",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "clsx": "^2.1.1",
    "cspell": "^8.14.4",
    "csv-parse": "^5.6.0",
    "dotenv": "^16.4.7",
    "framer-motion": "^12.4.3",
    "ioredis": "^5.6.1",
    "jsonwebtoken": "^9.0.2",
    "katex": "^0.16.21",
    "mammoth": "^1.9.0",
    "multer": "^1.4.5-lts.1",
    "papaparse": "^5.5.2",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.14.1",
    "react-beautiful-dnd": "^13.1.1",
    "react-dropzone": "^14.3.5",
    "reflect-metadata": "^0.2.2",
    "rehype-katex": "^7.0.1",
    "remark-gfm": "^4.0.1",
    "remark-math": "^6.0.0",
    "rxjs": "^7.8.2",
    "sharp": "^0.33.5",
    "snowflake-sdk": "^2.0.3",
    "tailwind-merge": "^3.0.1",
    "tailwindcss-animate": "^1.0.7",
    "xlsx": "^0.18.5"
  },
  "devDependencies": {
    "@changesets/cli": "^2.29.4",
    "@nestjs/cli": "^11.0.7",
    "@nestjs/common": "^11.0.20",
    "@nestjs/core": "^11.0.20",
    "@nestjs/testing": "^11.0.20",
    "@types/glob": "^8.1.0",
    "@types/jest": "^29.5.14",
    "@types/kafkajs": "^1.9.0",
    "@types/morgan": "^1.9.9",
    "@types/multer": "^1.4.12",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/pg": "^8.15.2",
    "@types/sharp": "^0.32.0",
    "aws-sdk": "^2.1692.0",
    "cspell-lib": "^8.14.4",
    "glob": "^11.0.1",
    "jest": "^29.7.0",
    "madge": "^8.0.0",
    "prisma-dbml-generator": "^0.12.0",
    "ts-jest": "^29.3.4",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3"
  },
  "scripts": {
    "build": "nest build",
    "analyze:deps": "madge --image analysis/server-dependency-graph.svg --exclude \"node_modules\" server/src/ && madge --image analysis/frontend-graph.svg --exclude \"node_modules\" dashboard/src/",
    "analyze:schema": "ts-node analysis/schema-analyzer.ts",
    "analyze:mock-schema": "ts-node analysis/mock-schema-analyzer.ts",
    "analyze:performance": "ts-node analysis/rag-performance-test.ts",
    "analyze:all": "npm run analyze:deps && npm run analyze:mock-schema && npm run analyze:performance",
    "test": "jest --verbose",
    "test:watch": "jest --watch",
    "test:hybrid-search": "ts-node server/src/test/hybrid-search-test.ts",
    "test:refactored-services": "ts-node server/src/test/refactored-services-test.ts",
    "test:retrieval-services": "ts-node server/src/test/retrieval-services-test.ts"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "moduleDirectories": [
      "node_modules",
      "server/src"
    ],
    "moduleNameMapper": {
      "^@common/(.*)$": "<rootDir>/server/src/common/$1",
      "^@services/(.*)$": "<rootDir>/server/src/services/$1",
      "^@config/(.*)$": "<rootDir>/server/src/config/$1",
      "^@core/(.*)$": "<rootDir>/server/src/core/$1",
      "^@modules/(.*)$": "<rootDir>/server/src/modules/$1",
      "^@app/(.*)$": "<rootDir>/server/src/$1"
    },
    "testRegex": "src/services/rag/query-orchestrator\\.service\\.spec\\.ts",
    "transform": {
      "^.+\\.(t|j)s$": [
        "ts-jest",
        {
          "tsconfig": "server/tsconfig.json"
        }
      ]
    },
    "collectCoverageFrom": [
      "server/**/*.(t|j)s"
    ],
    "coverageDirectory": "coverage",
    "testEnvironment": "node"
  }
}
