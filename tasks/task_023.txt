# Task ID: 23
# Title: Implement System Monitoring and Health Checks
# Status: pending
# Dependencies: 3, 4
# Priority: low
# Description: Create a system monitoring dashboard with health checks, error tracking, and usage analytics for administrators.
# Details:
Implement a system monitoring dashboard for administrators. Create health check endpoints for various system components. Implement error tracking and alerting. Create usage analytics reports. Use the following technologies:

1. NestJS Terminus for health checks
2. Prometheus for metrics collection
3. Grafana for visualization (optional)
4. Custom error tracking and logging

Example health check implementation:
```typescript
@Controller('health')
export class HealthController {
  constructor(
    private health: HealthCheckService,
    private db: PrismaHealthIndicator,
    private kafka: KafkaHealthIndicator,
    private storage: AzureBlobHealthIndicator,
  ) {}

  @Get()
  @Roles('SYSTEM_ADMIN')
  check() {
    return this.health.check([
      () => this.db.pingCheck('database'),
      () => this.kafka.pingCheck('kafka'),
      () => this.storage.pingCheck('azure-blob'),
    ]);
  }
}
```

Implement a React-based monitoring dashboard with the following features:
1. System health status indicators
2. Error logs and trends
3. Usage analytics (active users, API calls, etc.)
4. Performance metrics (response times, queue lengths, etc.)

# Test Strategy:
Write unit tests for health check endpoints. Test monitoring dashboard components. Verify error tracking and alerting functionality. Test with simulated system failures to ensure proper detection and reporting. Create integration tests for the complete monitoring experience.
